# This is the default for the codeline.
root = true

[*]
end_of_line = CRLF

[VERSION]
end_of_line = LF

[.gitlab-ci.yml]
end_of_line = LF

[*.{config, cs, xml}]
indent_style = space
indent_size = 4
trim_trailing_whitespace = true

[*.{proj, props, sln, targets}]
indent_style = tab
trim_trailing_whitespace = true

[*.{csproj, json, targets}]
indent_style = space
indent_size = 2
trim_trailing_whitespace = true

[nuget.config]
indent_size = 2

[*.cs]
# You should also specify <Nullable>enable</Nullable> and at least <LangVersion>8</LangVersion> in your csproj file

### Formatting rules
dotnet_code_quality.api_surface = all
dotnet_code_quality.exclude_async_void_methods = false

# Specify the readonly modifier for fields that are initialized (either inline or inside of a constructor) but never reassigned
dotnet_style_readonly_field = true

# No unnecessary parentheses preferred
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_other_operators = never_if_unnecessary

# Prefer simple defaults (default instead of default(CancellationToken))
csharp_prefer_simple_default_expression = true

# Prefer the use of var
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true

# Always use braces
csharp_prefer_braces = true:warning

### Formatting and naming rules (inspired by the roslyn rules, than modified)

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:refactoring
dotnet_style_qualification_for_property = false:refactoring
dotnet_style_qualification_for_method = false:refactoring
dotnet_style_qualification_for_event = false:refactoring

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# C# specific
csharp_space_after_cast = false
csharp_using_directive_placement = outside_namespace

# Static readonly fields are ALL_UPPER
dotnet_naming_rule.static_readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.static_readonly_fields_should_be_pascal_case.symbols = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_should_be_pascal_case.style = static_readonly_field_style

dotnet_naming_symbols.static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static, readonly

dotnet_naming_style.static_readonly_field_style.capitalization = all_upper

# Constants are ALL_UPPER
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = all_upper

# Static fields are camelCase
dotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case

# Instance fields are camelCase and don't start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case


### Roslyn analyzer rules
# No need for CLS compliance. We use unsigned datatypes like UInt32, which are not part of the CLS
dotnet_diagnostic.CA1014.severity = none

# out parameters are fine
dotnet_diagnostic.CA1021.severity = none

# Many enum values should use other types than int32 to be more efficient and/or are closer to a spec
dotnet_diagnostic.CA1028.severity = none

# We have some Raise* or Fire* methods acting as a wrapper around real events. This rule encourages us to use an event directly instead of this methods - but we like our encapsulation
dotnet_diagnostic.CA1030.severity = none

dotnet_diagnostic.CA1031.severity = warning

# Our custom exception types constructors differ from the Exceptions constructors because our types require passing an ErrorCode
dotnet_diagnostic.CA1032.severity = none

dotnet_diagnostic.CA1033.severity = warning

# It's ok for us to nest some types to create a nice hierarchy, e.g. for spec values
dotnet_diagnostic.CA1034.severity = none

# We have multiple existing APIs not validating all input arguments. Instead of validating against null we'd prefer to switch to nullable=enable in near future
dotnet_diagnostic.CA1062.severity = none

# We allow underscores in field names to enable ALL_CAPS enum values
dotnet_diagnostic.CA1707.severity = none

# It's ok if fields and properties differ only by case
dotnet_diagnostic.CA1708.severity = none

# We don't want to provide named methods as an alternative to cast operators as we don't have the requirement to support non-C#-IL-languages
dotnet_diagnostic.CA2225.severity = none

# The DoNotUseInsecureDtdProcessingAnalyzer is super slow
dotnet_diagnostic.CA3075.severity = none

dotnet_diagnostic.CA5122.severity = warning

# C# Compiler complaining about missing parameter documentation when there are some other parameter documentations
dotnet_diagnostic.CS1573.severity = none

# C# Compiler complaining about missing xml documentation
dotnet_diagnostic.CS1591.severity = none

# We don't care about ISerializable implementation
dotnet_diagnostic.S3925.severity = none

# Configure CA1002 to check only the public API surface so that we can use List<> fields internally
dotnet_diagnostic.CA1002.severity = warning
dotnet_code_quality.CA1002.api_surface = public

# Warn for all other FxCop Rules by default
dotnet_diagnostic.CA1000.severity = warning
dotnet_diagnostic.CA1001.severity = warning
dotnet_diagnostic.CA1003.severity = warning
dotnet_diagnostic.CA1004.severity = warning
dotnet_diagnostic.CA1005.severity = warning
dotnet_diagnostic.CA1006.severity = warning
dotnet_diagnostic.CA1007.severity = warning
dotnet_diagnostic.CA1008.severity = warning
dotnet_diagnostic.CA1009.severity = warning
dotnet_diagnostic.CA1010.severity = warning
dotnet_diagnostic.CA1011.severity = warning
dotnet_diagnostic.CA1012.severity = warning
dotnet_diagnostic.CA1013.severity = warning
dotnet_diagnostic.CA1016.severity = warning
dotnet_diagnostic.CA1017.severity = warning
dotnet_diagnostic.CA1018.severity = warning
dotnet_diagnostic.CA1019.severity = warning
dotnet_diagnostic.CA1020.severity = warning
dotnet_diagnostic.CA1023.severity = warning
dotnet_diagnostic.CA1024.severity = warning
dotnet_diagnostic.CA1025.severity = warning
dotnet_diagnostic.CA1026.severity = warning
dotnet_diagnostic.CA1027.severity = warning
dotnet_diagnostic.CA1035.severity = warning
dotnet_diagnostic.CA1036.severity = warning
dotnet_diagnostic.CA1038.severity = warning
dotnet_diagnostic.CA1039.severity = warning
dotnet_diagnostic.CA1040.severity = warning
dotnet_diagnostic.CA1041.severity = warning
dotnet_diagnostic.CA1043.severity = warning
dotnet_diagnostic.CA1044.severity = warning
dotnet_diagnostic.CA1045.severity = warning
dotnet_diagnostic.CA1046.severity = warning
dotnet_diagnostic.CA1047.severity = warning
dotnet_diagnostic.CA1048.severity = warning
dotnet_diagnostic.CA1049.severity = warning
dotnet_diagnostic.CA1050.severity = warning
dotnet_diagnostic.CA1051.severity = warning
dotnet_diagnostic.CA1052.severity = warning
dotnet_diagnostic.CA1053.severity = warning
dotnet_diagnostic.CA1054.severity = warning
dotnet_diagnostic.CA1055.severity = warning
dotnet_diagnostic.CA1056.severity = warning
dotnet_diagnostic.CA1057.severity = warning
dotnet_diagnostic.CA1058.severity = warning
dotnet_diagnostic.CA1059.severity = warning
dotnet_diagnostic.CA1060.severity = warning
dotnet_diagnostic.CA1061.severity = warning
dotnet_diagnostic.CA1063.severity = warning
dotnet_diagnostic.CA1064.severity = warning
dotnet_diagnostic.CA1065.severity = warning
dotnet_diagnostic.CA1300.severity = warning
dotnet_diagnostic.CA1301.severity = warning
dotnet_diagnostic.CA1302.severity = warning
dotnet_diagnostic.CA1303.severity = warning
dotnet_diagnostic.CA1304.severity = warning
dotnet_diagnostic.CA1305.severity = warning
dotnet_diagnostic.CA1306.severity = warning
dotnet_diagnostic.CA1307.severity = warning
dotnet_diagnostic.CA1308.severity = warning
dotnet_diagnostic.CA1309.severity = warning
dotnet_diagnostic.CA1400.severity = warning
dotnet_diagnostic.CA1401.severity = warning
dotnet_diagnostic.CA1402.severity = warning
dotnet_diagnostic.CA1403.severity = warning
dotnet_diagnostic.CA1404.severity = warning
dotnet_diagnostic.CA1405.severity = warning
dotnet_diagnostic.CA1406.severity = warning
dotnet_diagnostic.CA1407.severity = warning
dotnet_diagnostic.CA1408.severity = warning
dotnet_diagnostic.CA1409.severity = warning
dotnet_diagnostic.CA1410.severity = warning
dotnet_diagnostic.CA1411.severity = warning
dotnet_diagnostic.CA1412.severity = warning
dotnet_diagnostic.CA1413.severity = warning
dotnet_diagnostic.CA1414.severity = warning
dotnet_diagnostic.CA1415.severity = warning
dotnet_diagnostic.CA1500.severity = warning
dotnet_diagnostic.CA1501.severity = warning
dotnet_diagnostic.CA1502.severity = warning
dotnet_diagnostic.CA1504.severity = warning
dotnet_diagnostic.CA1505.severity = warning
dotnet_diagnostic.CA1506.severity = warning
dotnet_diagnostic.CA1600.severity = warning
dotnet_diagnostic.CA1601.severity = warning
dotnet_diagnostic.CA1700.severity = warning
dotnet_diagnostic.CA1701.severity = warning
dotnet_diagnostic.CA1702.severity = warning
dotnet_diagnostic.CA1703.severity = warning
dotnet_diagnostic.CA1704.severity = warning
dotnet_diagnostic.CA1709.severity = warning
dotnet_diagnostic.CA1710.severity = warning
dotnet_diagnostic.CA1711.severity = warning
dotnet_diagnostic.CA1712.severity = warning
dotnet_diagnostic.CA1713.severity = warning
dotnet_diagnostic.CA1714.severity = warning
dotnet_diagnostic.CA1715.severity = warning
dotnet_diagnostic.CA1716.severity = warning
dotnet_diagnostic.CA1717.severity = warning
dotnet_diagnostic.CA1719.severity = warning
dotnet_diagnostic.CA1720.severity = warning
dotnet_diagnostic.CA1721.severity = warning
dotnet_diagnostic.CA1722.severity = warning
dotnet_diagnostic.CA1724.severity = warning
dotnet_diagnostic.CA1725.severity = warning
dotnet_diagnostic.CA1726.severity = warning
dotnet_diagnostic.CA1800.severity = warning
dotnet_diagnostic.CA1801.severity = warning
dotnet_diagnostic.CA1802.severity = warning
dotnet_diagnostic.CA1804.severity = warning
dotnet_diagnostic.CA1806.severity = warning
dotnet_diagnostic.CA1809.severity = warning
dotnet_diagnostic.CA1810.severity = warning
dotnet_diagnostic.CA1811.severity = warning
dotnet_diagnostic.CA1812.severity = warning
dotnet_diagnostic.CA1813.severity = warning
dotnet_diagnostic.CA1814.severity = warning
dotnet_diagnostic.CA1815.severity = warning
dotnet_diagnostic.CA1816.severity = warning
dotnet_diagnostic.CA1819.severity = warning
dotnet_diagnostic.CA1820.severity = warning
dotnet_diagnostic.CA1821.severity = warning
dotnet_diagnostic.CA1822.severity = warning
dotnet_diagnostic.CA1823.severity = warning
dotnet_diagnostic.CA1824.severity = warning
dotnet_diagnostic.CA1900.severity = warning
dotnet_diagnostic.CA1901.severity = warning
dotnet_diagnostic.CA1903.severity = warning
dotnet_diagnostic.CA2000.severity = warning
dotnet_diagnostic.CA2001.severity = warning
dotnet_diagnostic.CA2002.severity = warning
dotnet_diagnostic.CA2003.severity = warning
dotnet_diagnostic.CA2004.severity = warning
dotnet_diagnostic.CA2006.severity = warning
dotnet_diagnostic.CA2007.severity = warning
dotnet_diagnostic.CA2100.severity = warning
dotnet_diagnostic.CA2101.severity = warning
dotnet_diagnostic.CA2102.severity = warning
dotnet_diagnostic.CA2103.severity = warning
dotnet_diagnostic.CA2104.severity = warning
dotnet_diagnostic.CA2105.severity = warning
dotnet_diagnostic.CA2106.severity = warning
dotnet_diagnostic.CA2107.severity = warning
dotnet_diagnostic.CA2108.severity = warning
dotnet_diagnostic.CA2109.severity = warning
dotnet_diagnostic.CA2111.severity = warning
dotnet_diagnostic.CA2112.severity = warning
dotnet_diagnostic.CA2114.severity = warning
dotnet_diagnostic.CA2115.severity = warning
dotnet_diagnostic.CA2116.severity = warning
dotnet_diagnostic.CA2117.severity = warning
dotnet_diagnostic.CA2118.severity = warning
dotnet_diagnostic.CA2119.severity = warning
dotnet_diagnostic.CA2120.severity = warning
dotnet_diagnostic.CA2121.severity = warning
dotnet_diagnostic.CA2122.severity = warning
dotnet_diagnostic.CA2123.severity = warning
dotnet_diagnostic.CA2124.severity = warning
dotnet_diagnostic.CA2126.severity = warning
dotnet_diagnostic.CA2127.severity = warning
dotnet_diagnostic.CA2128.severity = warning
dotnet_diagnostic.CA2129.severity = warning
dotnet_diagnostic.CA2130.severity = warning
dotnet_diagnostic.CA2131.severity = warning
dotnet_diagnostic.CA2132.severity = warning
dotnet_diagnostic.CA2133.severity = warning
dotnet_diagnostic.CA2134.severity = warning
dotnet_diagnostic.CA2135.severity = warning
dotnet_diagnostic.CA2136.severity = warning
dotnet_diagnostic.CA2137.severity = warning
dotnet_diagnostic.CA2138.severity = warning
dotnet_diagnostic.CA2139.severity = warning
dotnet_diagnostic.CA2140.severity = warning
dotnet_diagnostic.CA2141.severity = warning
dotnet_diagnostic.CA2142.severity = warning
dotnet_diagnostic.CA2143.severity = warning
dotnet_diagnostic.CA2144.severity = warning
dotnet_diagnostic.CA2145.severity = warning
dotnet_diagnostic.CA2146.severity = warning
dotnet_diagnostic.CA2147.severity = warning
dotnet_diagnostic.CA2149.severity = warning
dotnet_diagnostic.CA2151.severity = warning
dotnet_diagnostic.CA2200.severity = warning
dotnet_diagnostic.CA2201.severity = warning
dotnet_diagnostic.CA2202.severity = warning
dotnet_diagnostic.CA2204.severity = warning
dotnet_diagnostic.CA2205.severity = warning
dotnet_diagnostic.CA2207.severity = warning
dotnet_diagnostic.CA2208.severity = warning
dotnet_diagnostic.CA2210.severity = warning
dotnet_diagnostic.CA2211.severity = warning
dotnet_diagnostic.CA2212.severity = warning
dotnet_diagnostic.CA2213.severity = warning
dotnet_diagnostic.CA2214.severity = warning
dotnet_diagnostic.CA2215.severity = warning
dotnet_diagnostic.CA2216.severity = warning
dotnet_diagnostic.CA2217.severity = warning
dotnet_diagnostic.CA2218.severity = warning
dotnet_diagnostic.CA2219.severity = warning
dotnet_diagnostic.CA2220.severity = warning
dotnet_diagnostic.CA2221.severity = warning
dotnet_diagnostic.CA2222.severity = warning
dotnet_diagnostic.CA2223.severity = warning
dotnet_diagnostic.CA2224.severity = warning
dotnet_diagnostic.CA2226.severity = warning
dotnet_diagnostic.CA2227.severity = warning
dotnet_diagnostic.CA2228.severity = warning
dotnet_diagnostic.CA2229.severity = warning
dotnet_diagnostic.CA2230.severity = warning
dotnet_diagnostic.CA2231.severity = warning
dotnet_diagnostic.CA2232.severity = warning
dotnet_diagnostic.CA2233.severity = warning
dotnet_diagnostic.CA2234.severity = warning
dotnet_diagnostic.CA2235.severity = warning
dotnet_diagnostic.CA2236.severity = warning
dotnet_diagnostic.CA2237.severity = warning
dotnet_diagnostic.CA2238.severity = warning
dotnet_diagnostic.CA2239.severity = warning
dotnet_diagnostic.CA2240.severity = warning
dotnet_diagnostic.CA2241.severity = warning
dotnet_diagnostic.CA2242.severity = warning
dotnet_diagnostic.CA2243.severity = warning


### StyleCop analyzer rules

# This rule would require to add a space after each new() expression, even for the new C# 9.0 implicitly typed constructor calls.
# It's also not possible to add no space for an explicitly typed constructor – as the class name is already following the new keyword.
dotnet_diagnostic.SA1000.severity = none

# This rule is a bit too hard and complains about empty lines containing only indentation spaces
dotnet_diagnostic.SA1028.severity = none

# We don't want to prefix every field access with "this."
dotnet_diagnostic.SA1101.severity = none

# We do want to use regions
dotnet_diagnostic.SA1124.severity = none

# We want to put using directories whereever we want to
dotnet_diagnostic.SA1200.severity = none

# Those arbitrary orders of some elements are more annoying then helpful. We'd like to group methods and properties that belong together instead of scattering them everywhere
dotnet_diagnostic.SA1201.severity = none

dotnet_diagnostic.SA1202.severity = none

# SA1203 ConstantsMustAppearBeforeFields remains active as that's a good idea
dotnet_diagnostic.SA1204.severity = none

# We allow underscores in field names to enable ALL_CAPS enum values
dotnet_diagnostic.SA1310.severity = none

# There are reasons to have multiple types in one file
dotnet_diagnostic.SA1402.severity = none

# We like to omit obvious parenthesis
dotnet_diagnostic.SA1407.severity = none

# Operator precedence should be clear enough so we'd like to omit parenthesis also
dotnet_diagnostic.SA1408.severity = none

dotnet_diagnostic.SA1413.severity = none

# Nobody want's to enforce blank lines
dotnet_diagnostic.SA1513.severity = none

# Nobody want's to enforce blank lines
dotnet_diagnostic.SA1516.severity = none

# We don't want to document everything by default
dotnet_diagnostic.SA1600.severity = none

dotnet_diagnostic.SA1601.severity = none

dotnet_diagnostic.SA1602.severity = none

# We strive for good understandable code and don't want to document all method parameters
dotnet_diagnostic.SA1611.severity = none

# We don't want to document every method return value
dotnet_diagnostic.SA1615.severity = none

# We don't want to document every generic parameter
dotnet_diagnostic.SA1618.severity = none

# We don't want to document every generic parameter in partial classes
dotnet_diagnostic.SA1619.severity = none

# We don't like the idea of a strict pattern for properties documentation
dotnet_diagnostic.SA1623.severity = none

# Nobody likes pedanting analyzers dictating periods at end of documentation text
dotnet_diagnostic.SA1629.severity = none

# We don't want to add headers to every file
dotnet_diagnostic.SA1633.severity = none

# We don't document the obvious (that a constructor is constructing a new instance of the class)
dotnet_diagnostic.SA1642.severity = none

# We don't document the obvious (that a desctructor finalizes the instance)
dotnet_diagnostic.SA1643.severity = none

[*.xaml.cs]
# has an object hierarchy '8' levels deep within the defining module. It's not possible to change this as those base classes are mostly coming from Xamarin.Forms
dotnet_diagnostic.CA1501.severity = none
